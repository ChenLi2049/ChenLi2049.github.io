<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chen Li</title><description>Chen Li's personal blog</description><link>https://ChenLi2049.github.io</link><language>en</language><copyright>Copyright 2023, Calvin Tran</copyright><lastBuildDate>Sat, 09 Sep 2023 00:00:00 +0000</lastBuildDate><generator>Hugo - gohugo.io</generator><docs>http://cyber.harvard.edu/rss/rss.html</docs><atom:link href="https://ChenLi2049.github.io/atom.xml" rel="self" type="application/atom+xml"/><item><title>Machine Learning Notes: Mojonization</title><link>https://ChenLi2049.github.io/posts/20230909-machine-learning-notes-mojonization/</link><description>&lt;p>&lt;strong>mojonization&lt;/strong>: &lt;em>n.&lt;/em> the migration and translation from Python to Mojo, the superset of Python. (Yeah I made up this word, as far as I know. &lt;a href="http://darkbluejacket.blogspot.com/2015/09/the-glory-of-cross-mojonization.html">&lt;em>CrossÂ Mojonization&lt;/em>&lt;/a> is a totally different thing.)&lt;/p>
&lt;p>This article summarizes this process and is my notes / cheat sheet. Note that Mojo is relatively new and some rules might be changing rapidly, thus this article can be outdated easily. So please always check the &lt;a href="https://docs.modular.com/">official documents&lt;/a>.&lt;/p>
&lt;p>The following content is based on what happened in a &lt;code>.ipynb&lt;/code> file, to run a &lt;code>.mojo&lt;/code> or &lt;code>.ðŸ”¥&lt;/code> file, see &lt;a href="https://docs.modular.com/mojo/manual/get-started/hello-world.html#build-and-run-mojo-source-files">&lt;em>Build and run Mojo source files&lt;/em>&lt;/a>.&lt;/p>
&lt;h2 id="1-mojo-language-basics">Â§1 Mojo Language Basics&lt;/h2>
&lt;p>This is my notes from &lt;a href="https://docs.modular.com/mojo/manual/basics/">&lt;em>Mojo language basics&lt;/em>&lt;/a> and &lt;a href="https://docs.modular.com/mojo/programming-manual.html">&lt;em>Mojo programming manual&lt;/em>&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Mojoâ€™s standard library has not yet grown a standard list or dictionary type and &lt;a href="https://docs.modular.com/mojo/roadmap.html#no-list-or-dict-comprehensions">list or dict comprehensions is not supported&lt;/a>. See &lt;a href="https://docs.modular.com/mojo/roadmap.html">&lt;em>Roadmap &amp;amp; sharp edges&lt;/em>&lt;/a>.&lt;/li>
&lt;li>See &lt;a href="https://docs.modular.com/mojo/lib.html">&lt;em>Mojo modules&lt;/em>&lt;/a> for all the APIs.&lt;/li>
&lt;li>You can useÂ &lt;code>%%python&lt;/code>Â at the top of a notebook cell and write normal Python code. Variables, functions, and imports defined in a Python cell are available for access in subsequent Mojo cells.&lt;/li>
&lt;/ul>
&lt;h3 id="11-var--let">Â§1.1 &lt;code>var&lt;/code> &amp;amp; &lt;code>let&lt;/code>&lt;/h3>
&lt;p>You can declare variables withÂ &lt;code>var&lt;/code>Â to create a mutable value, or withÂ &lt;code>let&lt;/code>Â to create an immutable value. Although types aren&amp;rsquo;t required, it&amp;rsquo;s recommended to do so. You can check all the types in Mojo at &lt;a href="https://docs.modular.com/mojo/stdlib/builtin/int.html">Modular Docs - int&lt;/a> or &lt;a href="https://docs.modular.com/mojo/stdlib/builtin/dtype.html">Modular Docs - dtype&lt;/a>. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">d&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">e&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Float64&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Always do these declaration at the beginning of code, because:&lt;/p>
&lt;ul>
&lt;li>Redefining implicit variables is not supported (variables without aÂ &lt;code>let&lt;/code>Â orÂ &lt;code>var&lt;/code>Â in front). If youâ€™d like to redefine a variable across notebook cells, you must introduce the variable withÂ &lt;code>var&lt;/code>Â (&lt;code>let&lt;/code>Â variables are immutable).&lt;/li>
&lt;li>You canâ€™t use global variables inside functionsâ€”theyâ€™re only visible to other global variables.&lt;/li>
&lt;/ul>
&lt;h3 id="12-fn">Â§1.2 &lt;code>fn&lt;/code>&lt;/h3>
&lt;p>&lt;code>fn&lt;/code> is similar to &lt;code>def&lt;/code> in Python. And Mojo supports &lt;code>def&lt;/code> too. Types are required for arguments and return values for aÂ &lt;code>fn&lt;/code> function.&lt;/p>
&lt;h4 id="121-immutable-arguments-borrowed">Â§1.2.1 Immutable Arguments: &lt;code>borrowed&lt;/code>&lt;/h4>
&lt;ul>
&lt;li>If the arguments of the function are immutable:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">add&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">borrowed&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">borrowed&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">add&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>will get:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="122-mutable-arguments-inout">Â§1.2.2 Mutable Arguments: &lt;code>inout&lt;/code>&lt;/h4>
&lt;ul>
&lt;li>If the arguments are mutable:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">add_inout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">inout&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">inout&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">add_inout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>will get (&lt;strong>Note that &lt;code>a&lt;/code> and &lt;code>b&lt;/code> has changed&lt;/strong>):
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="123-transfer-arguments-owned--">Â§1.2.3 Transfer Arguments: &lt;code>owned&lt;/code> &amp;amp; &lt;code>^&lt;/code>&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>If the arguments are immutable but you still want to modify it without affecting variables outside the function (&lt;strong>This is normally what would happen in Python that global variables (variables outside the function) won&amp;rsquo;t change.&lt;/strong>)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># or var a = 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#75715e"># or var b = 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>^&lt;/code> will destroy local variable (variable inside the &lt;code>fn&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># or var a = 1, this will get a warning to suggest using let because a is never mutated&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#75715e"># late initialization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get an error at &lt;code>print(a)&lt;/code> because &lt;code>a&lt;/code> has been destroyed. And&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">owned&lt;/span> &lt;span style="color:#111">y&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#111">y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">a&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># or var a = 1, this will get a warning to suggest using let because a is never mutated&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span> &lt;span style="color:#75715e"># late initialization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">add_owned&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">a&lt;/span>&lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">b&lt;/span>&lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print(a)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print(b)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">c&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>In summary, in practice I will probably:&lt;/p>
&lt;ul>
&lt;li>use Transfer Arguments (&lt;code>owned&lt;/code> and &lt;code>^&lt;/code>)&lt;/li>
&lt;li>start by writing &lt;code>var&lt;/code> and then change it into &lt;code>let&lt;/code> according to the warning.&lt;/li>
&lt;/ul>
&lt;h3 id="13-struct">Â§1.3 &lt;code>struct&lt;/code>&lt;/h3>
&lt;p>&lt;code>struct&lt;/code> is similar to &lt;code>class&lt;/code> in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">struct&lt;/span> &lt;span style="color:#111">MyPair&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">first&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">var&lt;/span> &lt;span style="color:#111">second&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">inout&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">first&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">second&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">Int&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">first&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">second&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">second&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">fn&lt;/span> &lt;span style="color:#111">dump&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">first&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">second&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">mine&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">MyPair&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">mine&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dump&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="14-python-packages">Â§1.4 Python packages&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">python&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">np&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Python&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">import_module&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;numpy&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">pd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Python&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">import_module&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;pandas&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">let&lt;/span> &lt;span style="color:#111">plt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Python&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">import_module&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;matplotlib.pyplot&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">np&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">arange&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">15&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">reshape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ar&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">ar&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> 4&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> 9&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#ae81ff">13&lt;/span> 14&lt;span style="color:#f92672">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>3, 5&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-other-documents">Â§2 Other Documents&lt;/h2>
&lt;p>&lt;a href="https://docs.modular.com/mojo/programming-manual.html">&lt;em>Mojo programming manual&lt;/em>&lt;/a> explains why Mojo is designed in this way. I will look it up when facing bugs. I learned C++ years ago and I haven&amp;rsquo;t really learned Rust. I&amp;rsquo;m not familiar with Lifetime, Pointer, etc.&lt;/p>
&lt;p>&lt;a href="https://docs.modular.com/engine/">&lt;em>Modular AI Engine&lt;/em>&lt;/a> is about Modular AI Engine, which is not publicly available yet.&lt;/p></description><author>Chen Li</author><guid>https://ChenLi2049.github.io/posts/20230909-machine-learning-notes-mojonization/</guid><pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate></item><item><title>Machine Learning Notes: Jupyter Notebook 7, Torch 2.0, Mojo Locally</title><link>https://ChenLi2049.github.io/posts/20230908-machine-learning-notes-jupyter-notebook-7-torch-20-mojo-locally/</link><description>&lt;p>It&amp;rsquo;s wild all of these are happening so fast!&lt;/p>
&lt;p>On my local computer:&lt;/p>
&lt;ul>
&lt;li>I updated Jupyter Notebook to v7.0.3, and my post &lt;a href="https://chenli2049.github.io/posts/20230327-conda-101/">&lt;em>Conda 101&lt;/em>&lt;/a> is updated.&lt;/li>
&lt;/ul>
&lt;p>On the server:&lt;/p>
&lt;ul>
&lt;li>CUDA version is now &lt;code>11.7&lt;/code> and reaches the minimum requirement of &lt;code>torch 2.0&lt;/code>.&lt;/li>
&lt;li>&lt;code>Mojo&lt;/code> can be installed locally now, see &lt;a href="https://github.com/modularml/mojo/discussions/568">Mojo ðŸ”¥Â available for local download!&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Just imagine the speed! Installing process is gonna be hell, but I&amp;rsquo;m ready to go.&lt;/p></description><author>Chen Li</author><guid>https://ChenLi2049.github.io/posts/20230908-machine-learning-notes-jupyter-notebook-7-torch-20-mojo-locally/</guid><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate></item><item><title>XRISM &amp; SLIM</title><link>https://ChenLi2049.github.io/posts/20230907-xrism-slim/</link><description>&lt;p>X-Ray Imaging and Spectroscopy Mission (XRISM) is an X-ray space telescope. On the same rocket there&amp;rsquo;s also Smart Lander for Investigating MoonÂ (SLIM), a moon landing project.&lt;/p>
&lt;p>XRISM&amp;rsquo;s predecessor Hitomi was launched on 17 February 2016 and contact was lost on 26 March 2016, due to malfunction of theÂ attitude controlÂ system. After which, a lot changed. For example, &lt;a href="https://arxiv.org/abs/2106.01611">this article&lt;/a> explained the team management of XRISM, which is like an analogue of government system.&lt;/p>
&lt;p>And here&amp;rsquo;s a &lt;a href="https://github.com/ChenLi2049/ChenLi2049/blob/main/presentations/20220815_G1Presentation_XRISM.pptx">presentation&lt;/a> from my group project last summer, which is a quick introduction to XRISM. I do (not) miss using Microsoft PPT, those were simpler times.&lt;/p>
&lt;p>It&amp;rsquo;s a bit weird that writing about something makes you care about it more. I mean, I did not participate in the manufacturing process or anything. I guess this is also one of the meanings of this blog.&lt;/p>
&lt;p>XRISM, hang in there! Wow this is a pun. So, um &amp;hellip; SLIM, don&amp;rsquo;t?&lt;/p></description><author>Chen Li</author><guid>https://ChenLi2049.github.io/posts/20230907-xrism-slim/</guid><pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate></item></channel></rss>