<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chen Li</title><description>Chen Li's personal blog</description><link>https://ChenLi2049.github.io</link><language>en</language><copyright>Copyright 2023, Calvin Tran</copyright><lastBuildDate>Wed, 11 Oct 2023 00:00:00 +0000</lastBuildDate><generator>Hugo - gohugo.io</generator><docs>http://cyber.harvard.edu/rss/rss.html</docs><atom:link href="https://ChenLi2049.github.io/atom.xml" rel="self" type="application/atom+xml"/><item><title>Wow It Fits! — Secondhand Machine Learning</title><link>https://ChenLi2049.github.io/posts/20231011-wow-it-fits-secondhand-machine-learning/</link><description>&lt;p>(This article is the same content as &lt;a href="https://github.com/ChenLi2049/IntroML-2023FALL">IntroML-2023FALL (GitHub)&lt;/a>. There are a lot of pictures so it might take a while to load. This article is actually longer than it looks, because I use &lt;a href="https://yihui.org/en/2023/10/section-tabsets/">tabsets&lt;/a> a lot.)&lt;/p>
&lt;h2 id="1-intro">§1 Intro&lt;/h2>
&lt;p>This section is about tensor (high-dimensional matrix) and &lt;code>torch.nn&lt;/code>. For the part about &lt;a href="https://docs.conda.io/projects/miniconda/en/latest/">&lt;code>Conda&lt;/code>&lt;/a> in the original sildes, please refer to &lt;a href="https://chenli2049.github.io/posts/20230327-conda-101/">&lt;em>Conda 101&lt;/em>&lt;/a>.&lt;/p>
&lt;h3 id="11-tensor">§1.1 Tensor&lt;/h3>
&lt;p>In the rest of the article, we will always:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">torch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">torch.nn&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">nn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">torch.nn.functional&lt;/span> &lt;span style="color:#00a8c8">as&lt;/span> &lt;span style="color:#111">F&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torchinfo&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">summary&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="111-shape">§1.1.1 Shape&lt;/h4>
&lt;p>e.g. [H, W, C] (usually used in &lt;code>numpy&lt;/code> or &lt;code>matplotlib.pyplot&lt;/code>) or [C, H, W] (usually used in &lt;code>torch&lt;/code>) or [batch_size, C, H, W].&lt;/p>
&lt;p>&lt;img
src="https://raw.githubusercontent.com/mrdbourke/pytorch-deep-learning/main/images/00-pytorch-different-tensor-dimensions.png"
alt=""
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, C, H, W]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 3, 32, 32&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Commonly used method to change the shape of a tensor:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pytorch.org/docs/stable/generated/torch.Tensor.view.html">&lt;code>view()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pytorch.org/docs/stable/generated/torch.reshape.html">&lt;code>reshape()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pytorch.org/docs/stable/generated/torch.unsqueeze.html">&lt;code>unsqueeze()&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pytorch.org/docs/stable/generated/torch.squeeze.html">&lt;code>squeeze()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/arogozhnikov/einops">&lt;code>einops&lt;/code>&lt;/a> provides a more intuitive way to change the shape.&lt;/p>
&lt;h4 id="112-device">§1.1.2 Device&lt;/h4>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/tensor_attributes.html#torch-device">&lt;code>torch.device&lt;/code>&lt;/a>&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>Tensor device&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cpu&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>cpu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cuda:0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Model device&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Model&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Model&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Be on the same device&lt;/p>
&lt;p>All tensors and objects (datasets, models) should be on the same device.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">rand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Model&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">kernel_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">stride&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">padding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">kernel_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">stride&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">padding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fc1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fc2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">128&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">relu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">relu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">view&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">size&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">relu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fc1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fc2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Model&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 10&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="113-type">§1.1.3 Type&lt;/h4>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/tensor_attributes.html#torch-dtype">&lt;code>torch.dtype&lt;/code>&lt;/a>&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>numpy.ndarray&lt;/code> -&amp;gt; &lt;code>torch.Tensor&lt;/code>:&lt;/p>
&lt;p>float64 -&amp;gt; float32&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">np&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">random&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">rand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">from_numpy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">float32&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>float64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.float64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.float32
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>torch.Tensor&lt;/code> -&amp;gt; &lt;code>numpy.ndarray&lt;/code>:&lt;/p>
&lt;p>&lt;code>cuda&lt;/code> -&amp;gt; &lt;code>cpu&lt;/code>, float32 -&amp;gt; float64&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">rand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;cpu&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">numpy&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">astype&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;float64&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.float32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cuda:0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>float32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>float64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="12-torchnn">§1.2 &lt;code>torch.nn&lt;/code>&lt;/h3>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>nn.Conv2d&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html">&lt;code>nn.Conv2d&lt;/code>&lt;/a>. Convolution is a kind of weighted mean.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conv2d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">out_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">kernel_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 3, 28, 28&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 12, 26, 26&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.MaxPool2d&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.MaxPool2d.html">&lt;code>nn.MaxPool2d&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pool&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">MaxPool2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">kernel_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pool&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 3, 28, 28&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 3, 14, 14&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.BatchNorm2d&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.BatchNorm2d.html">&lt;code>nn.BatchNorm2d&lt;/code>&lt;/a>, See Fig.2 of &lt;a href="https://arxiv.org/abs/1803.08494">[1803.08494] &lt;em>Group Normalization&lt;/em>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">batchnorm&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">BatchNorm2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">batchnorm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.Linear&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Linear.html">&lt;code>nn.Linear&lt;/code>&lt;/a>. For fully connected layer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">linear&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">128&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>128, 12&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.Dropout&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Dropout.html">&lt;code>nn.Dropout&lt;/code>&lt;/a>. For fully connected layer. Using the samples in the Bernoulli distribution, some elements of the input tensor are randomly zeroed with probability $p$. To use it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dropout&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">p&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.5&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">inplace&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>x&lt;/code> can be a tensor in any shape.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.ReLU&lt;/code> or &lt;code>F.relu&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.ReLU.html">&lt;code>nn.ReLU&lt;/code>&lt;/a>, &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.relu.html">&lt;code>F.relu&lt;/code>&lt;/a>. Activation function, $\text{ReLU}(x)=\max{(0,x)}$, to use it：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ReLU&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">relu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>x&lt;/code> can be a tensor in any shape.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.RNN&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.RNN.html">&lt;code>nn.RNN&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">input_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">hidden_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">num_layers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">seq_length&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">batch_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">rnn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">RNN&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">input_data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_state&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">rnn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">input_data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>5, 3, 20&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.Module&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Module.html">&lt;code>nn.Module&lt;/code>&lt;/a>. Construct a block of layers. It could be the entire model or just a block of the entire model or loss function, etc.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MyBlock&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># define every layer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># define forward propagation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">relu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">relu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.Sequential&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Sequential.html">&lt;code>nn.Sequential&lt;/code>&lt;/a>. Compared with &lt;code>nn.Module&lt;/code>, &lt;code>nn.Sequential&lt;/code> can add the layers more easily and don&amp;rsquo;t have to define forward propagation. This is more useful when building a simple neural network&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Sequential&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ReLU&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 64, 22, 22&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="2-cnn">§2 CNN&lt;/h2>
&lt;p>MNIST is here for the purpose of introducing the pipeline of Machine Learning; AlexNet showed the power of cuda and deep neural network; ResNet is the most popular CNN to this day and residual connections are also used in Transformers.&lt;/p>
&lt;p>| &lt;a href="https://poloclub.github.io/cnn-explainer/">CNN Explainer&lt;/a> | &lt;a href="https://www.shadertoy.com/view/msVXWD">Handwritten Digit Recognizer CNN&lt;/a> |&lt;/p>
&lt;h3 id="21-mnist">§2.1 MNIST&lt;/h3>
&lt;p>| &lt;a href="https://github.com/pytorch/examples/tree/main/mnist">mnist (torch)&lt;/a> | &lt;a href="https://pytorch.org/tutorials/beginner/nn_tutorial.html">&lt;em>What is torch.nn really?&lt;/em>&lt;/a> | &lt;a href="https://paperswithcode.com/sota/image-classification-on-mnist">MNIST Benchmark&lt;/a> | &lt;a href="https://karpathy.github.io/2022/03/14/lecun1989/">&lt;em>Deep Neural Nets: 33 years ago and 33 years from now&lt;/em>&lt;/a> |&lt;/p>
&lt;center>&lt;img src="https://production-media.paperswithcode.com/datasets/MNIST-0000000001-2e09631a_09liOmx.jpg">&lt;/center>
&lt;p>In &lt;a href="https://github.com/pytorch/examples/tree/main/mnist">mnist (torch)&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Net&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">train&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">__name__&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#d88200">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">main&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>Cross Entropy Loss&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.log_softmax.html">&lt;code>F.log_softmax&lt;/code>&lt;/a>, &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.nll_loss.html">&lt;code>F.nll_loss&lt;/code>&lt;/a>, &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.cross_entropy.html">&lt;code>F.cross_entropy&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">pred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, num_classes]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">target&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,))&lt;/span>&lt;span style="color:#75715e"># [batch_size,]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">nll_loss&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">log_softmax&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pred&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cross_entropy&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pred&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">(&lt;/span>2.6026&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">(&lt;/span>2.6026&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#75715e"># same result&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>class Net&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Net&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">output&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">log_softmax&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">output&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">summary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Net&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#75715e"># [batch_size, C, H, W]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Layer &lt;span style="color:#f92672">(&lt;/span>type:depth-idx&lt;span style="color:#f92672">)&lt;/span> Output Shape Param &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Net &lt;span style="color:#f92672">[&lt;/span>16, 10&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Conv2d: 1-1 &lt;span style="color:#f92672">[&lt;/span>16, 32, 26, 26&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">320&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Conv2d: 1-2 &lt;span style="color:#f92672">[&lt;/span>16, 64, 24, 24&lt;span style="color:#f92672">]&lt;/span> 18,496
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Dropout: 1-3 &lt;span style="color:#f92672">[&lt;/span>16, 64, 12, 12&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Linear: 1-4 &lt;span style="color:#f92672">[&lt;/span>16, 128&lt;span style="color:#f92672">]&lt;/span> 1,179,776
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Dropout: 1-5 &lt;span style="color:#f92672">[&lt;/span>16, 128&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Linear: 1-6 &lt;span style="color:#f92672">[&lt;/span>16, 10&lt;span style="color:#f92672">]&lt;/span> 1,290
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total params: 1,199,882
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Trainable params: 1,199,882
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Non-trainable params: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total mult-adds &lt;span style="color:#f92672">(&lt;/span>M&lt;span style="color:#f92672">)&lt;/span>: 192.82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 0.05
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Forward/backward pass size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 7.51
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Params size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 4.80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Estimated Total Size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 12.35
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>def train&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">train&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">train_loader&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">optimizer&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">epoch&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># set the model to training mode: activate dropout and batch normalization.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">train&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># go through each batch.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">batch_idx&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">enumerate&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">train_loader&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># put data and target to device.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># the optimizer&amp;#39;s gradient is reset to 0.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">optimizer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">zero_grad&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># forward pass.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">output&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># calculate loss.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">loss&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">nll_loss&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># calculate the gradients.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">loss&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">backward&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># backward propagation.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">optimizer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">step&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print loss&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">batch_idx&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">log_interval&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Train Epoch: &lt;/span>&lt;span style="color:#d88200">{}&lt;/span>&lt;span style="color:#d88200"> [&lt;/span>&lt;span style="color:#d88200">{}&lt;/span>&lt;span style="color:#d88200">/&lt;/span>&lt;span style="color:#d88200">{}&lt;/span>&lt;span style="color:#d88200"> (&lt;/span>&lt;span style="color:#d88200">{:.0f}&lt;/span>&lt;span style="color:#d88200">%)]&lt;/span>&lt;span style="color:#8045ff">\t&lt;/span>&lt;span style="color:#d88200">Loss: &lt;/span>&lt;span style="color:#d88200">{:.6f}&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">epoch&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">batch_idx&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">train_loader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">100.&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">batch_idx&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">train_loader&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">loss&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">item&lt;/span>&lt;span style="color:#111">()))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># if `dry_run`, only run 1 epoch.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dry_run&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">break&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>def test&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">test_loader&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># set the model to evaluation mode.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">eval&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_loss&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">correct&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># gradient calculations are disabled.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">with&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">no_grad&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">test_loader&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># put data and target to device.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># forward pass.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">output&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># calculate loss, sum up batch loss.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_loss&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">nll_loss&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">output&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">target&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">reduction&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;sum&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">item&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># get the index of the max log-probability.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pred&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">output&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">argmax&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">keepdim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># compare predicted labels with target labels.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">correct&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">pred&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">eq&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">view_as&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">pred&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sum&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">item&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># average loss per sample.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_loss&lt;/span> &lt;span style="color:#f92672">/=&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">test_loader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">Test set: Average loss: &lt;/span>&lt;span style="color:#d88200">{:.4f}&lt;/span>&lt;span style="color:#d88200">, Accuracy: &lt;/span>&lt;span style="color:#d88200">{}&lt;/span>&lt;span style="color:#d88200">/&lt;/span>&lt;span style="color:#d88200">{}&lt;/span>&lt;span style="color:#d88200"> (&lt;/span>&lt;span style="color:#d88200">{:.0f}&lt;/span>&lt;span style="color:#d88200">%)&lt;/span>&lt;span style="color:#8045ff">\n&lt;/span>&lt;span style="color:#d88200">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">format&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_loss&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">correct&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">test_loader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">100.&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">correct&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">test_loader&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">)))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>def main&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Training settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">argparse&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ArgumentParser&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">description&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;PyTorch MNIST Example&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--batch-size&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">64&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;N&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;input batch size for training (default: 64)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--test-batch-size&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;N&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;input batch size for testing (default: 1000)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--epochs&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">14&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;N&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;number of epochs to train (default: 14)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--lr&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1.0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;LR&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;learning rate (default: 1.0)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--gamma&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.7&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;M&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;Learning rate step gamma (default: 0.7)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--no-cuda&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;store_true&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;disables CUDA training&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--no-mps&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;store_true&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;disables macOS GPU training&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--dry-run&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;store_true&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;quickly check a single pass&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--seed&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;S&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;random seed (default: 1)&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--log-interval&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metavar&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;N&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;how many batches to wait before logging training status&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">add_argument&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;--save-model&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;store_true&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">default&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">help&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;For Saving the current Model&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">args&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">parser&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">parse_args&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">use_cuda&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">no_cuda&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cuda&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">is_available&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">use_mps&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">no_mps&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">backends&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">mps&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">is_available&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">manual_seed&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">seed&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">use_cuda&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">device&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cuda&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">elif&lt;/span> &lt;span style="color:#111">use_mps&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">device&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;mps&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">else&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">device&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cpu&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">train_kwargs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;batch_size&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_kwargs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;batch_size&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">test_batch_size&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">use_cuda&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cuda_kwargs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>&lt;span style="color:#d88200">&amp;#39;num_workers&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;pin_memory&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;shuffle&amp;#39;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">train_kwargs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cuda_kwargs&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_kwargs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">update&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">cuda_kwargs&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># https://pytorch.org/vision/stable/transforms.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">transform&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">transforms&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Compose&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">transforms&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ToTensor&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">transforms&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Normalize&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#ae81ff">0.1307&lt;/span>&lt;span style="color:#111">,),&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0.3081&lt;/span>&lt;span style="color:#111">,))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># load training dataset and testing dataset&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">dataset1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">datasets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">MNIST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;../data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">train&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">download&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">transform&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">transform&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">dataset2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">datasets&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">MNIST&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;../data&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">train&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">transform&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">transform&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">train_loader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">utils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">DataLoader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dataset1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#111">train_kwargs&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test_loader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">utils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">DataLoader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dataset2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#111">test_kwargs&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># put model to device&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Net&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># set optimizer and scheduler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">optimizer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">optim&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Adadelta&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">parameters&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#111">lr&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">lr&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">scheduler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">StepLR&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">optimizer&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">step_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">gamma&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">gamma&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># train and test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">epoch&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">epochs&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">train&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">args&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">train_loader&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">optimizer&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">epoch&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">test&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">test_loader&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">scheduler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">step&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># save model&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">args&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">save_model&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">save&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">state_dict&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#d88200">&amp;#34;mnist_cnn.pt&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Later we will use &lt;code>fastai&lt;/code> instead of writing &lt;code>def train&lt;/code>, &lt;code>def test&lt;/code>, &lt;code>def main&lt;/code> from scratch.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>python main.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get (full log see &lt;a href="20231011-wow-it-fits-secondhand-machine-learning-02_mnist.log">02_mnist.log&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to ../data/MNIST/raw/train-images-idx3-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100% 9912422/9912422 &lt;span style="color:#f92672">[&lt;/span>00:00&amp;lt;00:00, 96238958.45it/s&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Extracting ../data/MNIST/raw/train-images-idx3-ubyte.gz to ../data/MNIST/raw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to ../data/MNIST/raw/train-labels-idx1-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100% 28881/28881 &lt;span style="color:#f92672">[&lt;/span>00:00&amp;lt;00:00, 151799115.07it/s&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Extracting ../data/MNIST/raw/train-labels-idx1-ubyte.gz to ../data/MNIST/raw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to ../data/MNIST/raw/t10k-images-idx3-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100% 1648877/1648877 &lt;span style="color:#f92672">[&lt;/span>00:00&amp;lt;00:00, 27617389.31it/s&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Extracting ../data/MNIST/raw/t10k-images-idx3-ubyte.gz to ../data/MNIST/raw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to ../data/MNIST/raw/t10k-labels-idx1-ubyte.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100% 4542/4542 &lt;span style="color:#f92672">[&lt;/span>00:00&amp;lt;00:00, 20180644.88it/s&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Extracting ../data/MNIST/raw/t10k-labels-idx1-ubyte.gz to ../data/MNIST/raw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">[&lt;/span>0/60000 &lt;span style="color:#f92672">(&lt;/span>0%&lt;span style="color:#f92672">)]&lt;/span> Loss: 2.282550
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">[&lt;/span>640/60000 &lt;span style="color:#f92672">(&lt;/span>1%&lt;span style="color:#f92672">)]&lt;/span> Loss: 1.384441
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">[&lt;/span>58880/60000 &lt;span style="color:#f92672">(&lt;/span>98%&lt;span style="color:#f92672">)]&lt;/span> Loss: 0.064402
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">[&lt;/span>59520/60000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)]&lt;/span> Loss: 0.033435
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0468, Accuracy: 9842/10000 &lt;span style="color:#f92672">(&lt;/span>98%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">[&lt;/span>0/60000 &lt;span style="color:#f92672">(&lt;/span>0%&lt;span style="color:#f92672">)]&lt;/span> Loss: 0.098867
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">[&lt;/span>640/60000 &lt;span style="color:#f92672">(&lt;/span>1%&lt;span style="color:#f92672">)]&lt;/span> Loss: 0.016046
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">[&lt;/span>58880/60000 &lt;span style="color:#f92672">(&lt;/span>98%&lt;span style="color:#f92672">)]&lt;/span> Loss: 0.108346
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Train Epoch: &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">[&lt;/span>59520/60000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)]&lt;/span> Loss: 0.108657
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0327, Accuracy: 9894/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0346, Accuracy: 9887/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0314, Accuracy: 9891/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0301, Accuracy: 9903/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0301, Accuracy: 9913/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0293, Accuracy: 9918/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0295, Accuracy: 9919/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0296, Accuracy: 9915/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0277, Accuracy: 9919/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0284, Accuracy: 9922/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0272, Accuracy: 9922/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0278, Accuracy: 9921/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Test set: Average loss: 0.0278, Accuracy: 9922/10000 &lt;span style="color:#f92672">(&lt;/span>99%&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="22-alexnet-deep-learning-revolution">§2.2 AlexNet: Deep Learning Revolution&lt;/h3>
&lt;p>&lt;a href="https://www.image-net.org/">ImageNet&lt;/a>: 14,197,122 images, 21841 synsets indexed.&lt;/p>
&lt;p>| &lt;a href="https://proceedings.neurips.cc/paper_files/paper/2012/hash/c399862d3b9d6b76c8436e924a68c45b-Abstract.html">paper&lt;/a> | &lt;a href="https://github.com/pytorch/vision/blob/main/torchvision/models/alexnet.py">&lt;code>torchvision.models.alexnet&lt;/code>&lt;/a> | &lt;a href="https://pytorch.org/hub/pytorch_vision_alexnet/">AlexNet (pytorch.org)&lt;/a> |&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Methods&lt;/th>
&lt;th style="text-align:left">Do we use it today?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">2 GPUs: written in &lt;code>cuda&lt;/code>, split into 2 different pipelines with connection.&lt;/td>
&lt;td style="text-align:left">✔️&amp;amp;✖️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Simple activation function &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.ReLU.html">ReLU&lt;/a> ($\text{ReLU} (x) = \max{(0,x)}$), instead of &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Tanh.html">Tanh&lt;/a> ($\text{Tanh} (x) = \tanh{(x)}$) or &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.sigmoid.html">Sigmoid&lt;/a> ($\sigma (x)= (1+e^{-x})^{-1}$).&lt;/td>
&lt;td style="text-align:left">✔️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Local response normalization&lt;/td>
&lt;td style="text-align:left">✖️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Overlapping pooling&lt;/td>
&lt;td style="text-align:left">✖️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">The feature map ($C$) keeps increasing (3 $\to$ 48 $\to$ 128 $\to$ 192 $\to$ 128), while the resolution ($H$, $W$) keeps decreasing (224 $\to$ 55 $\to$ 27 $\to$ 13 $\to$ 13 $\to$ 13).&lt;/td>
&lt;td style="text-align:left">✔️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Kernel size keeps decreasing (11 $\to$ 5 $\to$ 3 $\to$ 3 $\to$ 3)&lt;/td>
&lt;td style="text-align:left">✖️, same kernel size 3, see ResNet below&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Multiple linear layers. (take most of the parameters, 55M/61M)&lt;/td>
&lt;td style="text-align:left">✖️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Data augmentation (Image translations and horizontal reflections, color jitter)&lt;/td>
&lt;td style="text-align:left">&lt;a href="https://pytorch.org/vision/stable/transforms.html">✔️&lt;/a>, actually this is more data&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Dropout&lt;/td>
&lt;td style="text-align:left">✔️&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">summary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">AlexNet&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Layer &lt;span style="color:#f92672">(&lt;/span>type:depth-idx&lt;span style="color:#f92672">)&lt;/span> Output Shape Param &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AlexNet &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Sequential: 1-1 &lt;span style="color:#f92672">[&lt;/span>16, 256, 6, 6&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-1 &lt;span style="color:#f92672">[&lt;/span>16, 64, 55, 55&lt;span style="color:#f92672">]&lt;/span> 23,296
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-2 &lt;span style="color:#f92672">[&lt;/span>16, 64, 55, 55&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─MaxPool2d: 2-3 &lt;span style="color:#f92672">[&lt;/span>16, 64, 27, 27&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-4 &lt;span style="color:#f92672">[&lt;/span>16, 192, 27, 27&lt;span style="color:#f92672">]&lt;/span> 307,392
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-5 &lt;span style="color:#f92672">[&lt;/span>16, 192, 27, 27&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─MaxPool2d: 2-6 &lt;span style="color:#f92672">[&lt;/span>16, 192, 13, 13&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-7 &lt;span style="color:#f92672">[&lt;/span>16, 384, 13, 13&lt;span style="color:#f92672">]&lt;/span> 663,936
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-8 &lt;span style="color:#f92672">[&lt;/span>16, 384, 13, 13&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-9 &lt;span style="color:#f92672">[&lt;/span>16, 256, 13, 13&lt;span style="color:#f92672">]&lt;/span> 884,992
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-10 &lt;span style="color:#f92672">[&lt;/span>16, 256, 13, 13&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-11 &lt;span style="color:#f92672">[&lt;/span>16, 256, 13, 13&lt;span style="color:#f92672">]&lt;/span> 590,080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-12 &lt;span style="color:#f92672">[&lt;/span>16, 256, 13, 13&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─MaxPool2d: 2-13 &lt;span style="color:#f92672">[&lt;/span>16, 256, 6, 6&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─AdaptiveAvgPool2d: 1-2 &lt;span style="color:#f92672">[&lt;/span>16, 256, 6, 6&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Sequential: 1-3 &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Dropout: 2-14 &lt;span style="color:#f92672">[&lt;/span>16, 9216&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Linear: 2-15 &lt;span style="color:#f92672">[&lt;/span>16, 4096&lt;span style="color:#f92672">]&lt;/span> 37,752,832
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-16 &lt;span style="color:#f92672">[&lt;/span>16, 4096&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Dropout: 2-17 &lt;span style="color:#f92672">[&lt;/span>16, 4096&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Linear: 2-18 &lt;span style="color:#f92672">[&lt;/span>16, 4096&lt;span style="color:#f92672">]&lt;/span> 16,781,312
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ReLU: 2-19 &lt;span style="color:#f92672">[&lt;/span>16, 4096&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Linear: 2-20 &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> 4,097,000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total params: 61,100,840
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Trainable params: 61,100,840
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Non-trainable params: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total mult-adds &lt;span style="color:#f92672">(&lt;/span>G&lt;span style="color:#f92672">)&lt;/span>: 11.43
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 9.63
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Forward/backward pass size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 63.26
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Params size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 244.40
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Estimated Total Size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 317.29
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="23-resnet-deeper">§2.3 ResNet: Deeper&lt;/h3>
&lt;p>| &lt;a href="https://arxiv.org/abs/1512.03385">paper&lt;/a> | &lt;a href="https://github.com/pytorch/vision/blob/main/torchvision/models/resnet.py">&lt;code>torchvision.models.resnet&lt;/code>&lt;/a> | &lt;a href="https://pytorch.org/hub/pytorch_vision_resnet/">ResNet (pytorch.org)&lt;/a> |&lt;/p>
&lt;p>Problem: With deeper layers, the loss goes upwards (see Fig.1 of the paper), but even if all the added layers are identity functions, the loss would be the same.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Methods&lt;/th>
&lt;th style="text-align:left">Do we use it today?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">Residual connections to learn the differences and go &lt;strong>deeper&lt;/strong> (50, 101, 152, 1202 layers, with 0.85M parameters to 19.4M parameters)&lt;/td>
&lt;td style="text-align:left">✔️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">The feature map ($C$) keeps increasing (64 $\to$ 128 $\to$ 256 $\to$ 512), while the number of the resolution ($H$, $W$) keeps decreasing (224 $\to$ 112 $\to$ 56 $\to$ 28 $\to$ 14 $\to$ 7 $\to$ 1).&lt;/td>
&lt;td style="text-align:left">✔️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Stride 2 convolution kernel, instead of pooling&lt;/td>
&lt;td style="text-align:left">✔️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Bottleneck building block: $1 \times 1$ convolution kernel&lt;/td>
&lt;td style="text-align:left">✔️&amp;amp;✖️&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Adopt batch normalization (BN) right after each convolution and before activation&lt;/td>
&lt;td style="text-align:left">✔️&amp;amp;✖️, ongoing debate&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Basically residual connections are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Res&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">residual&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">residual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">residual&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">residual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By using residual connections, the model will learn linearity first and non-linearity after. We will see residual connections in Transformers.&lt;/p>
&lt;p>In &lt;a href="https://github.com/pytorch/vision/blob/main/torchvision/models/resnet.py">&lt;code>torchvision.models.resnet&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">conv3x3&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">conv1x1&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">BasicBlock&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Bottleneck&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ResNet&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">_make_layer&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">_forward_impl&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">ResNet18_Weights&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">resnet18&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To use it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torchvision.models.resnet&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">resnet18&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">resnet18&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">summary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hub&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">load&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;pytorch/vision:v0.10.0&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;resnet18&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">pretrained&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">summary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>Downloading: &lt;span style="color:#d88200">&amp;#34;https://github.com/pytorch/vision/zipball/v0.10.0&amp;#34;&lt;/span> to /root/.cache/torch/hub/v0.10.0.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter &lt;span style="color:#d88200">&amp;#39;pretrained&amp;#39;&lt;/span> is deprecated since 0.13 and may be removed in the future, please use &lt;span style="color:#d88200">&amp;#39;weights&amp;#39;&lt;/span> instead.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warnings.warn&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or &lt;span style="color:#d88200">`&lt;/span>None&lt;span style="color:#d88200">`&lt;/span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#d88200">&amp;#39;weights&amp;#39;&lt;/span> are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing &lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">weights&lt;/span>&lt;span style="color:#f92672">=&lt;/span>ResNet18_Weights.IMAGENET1K_V1&lt;span style="color:#d88200">`&lt;/span>. You can also use &lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">weights&lt;/span>&lt;span style="color:#f92672">=&lt;/span>ResNet18_Weights.DEFAULT&lt;span style="color:#d88200">`&lt;/span> to get the most up-to-date weights.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warnings.warn&lt;span style="color:#f92672">(&lt;/span>msg&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading: &lt;span style="color:#d88200">&amp;#34;https://download.pytorch.org/models/resnet18-f37072fd.pth&amp;#34;&lt;/span> to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100%&lt;span style="color:#111">|&lt;/span>██████████&lt;span style="color:#111">|&lt;/span> 44.7M/44.7M &lt;span style="color:#f92672">[&lt;/span>00:00&amp;lt;00:00, 114MB/s&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Layer &lt;span style="color:#f92672">(&lt;/span>type:depth-idx&lt;span style="color:#f92672">)&lt;/span> Output Shape Param &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ResNet &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Conv2d: 1-1 &lt;span style="color:#f92672">[&lt;/span>16, 64, 112, 112&lt;span style="color:#f92672">]&lt;/span> 9,408
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─BatchNorm2d: 1-2 &lt;span style="color:#f92672">[&lt;/span>16, 64, 112, 112&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─ReLU: 1-3 &lt;span style="color:#f92672">[&lt;/span>16, 64, 112, 112&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─MaxPool2d: 1-4 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Sequential: 1-5 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-1 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-1 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> 36,864
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-2 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-3 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-4 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> 36,864
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-5 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-6 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-2 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-7 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> 36,864
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-8 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-9 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-10 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> 36,864
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-11 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-12 &lt;span style="color:#f92672">[&lt;/span>16, 64, 56, 56&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Sequential: 1-6 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-3 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-13 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> 73,728
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-14 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-15 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-16 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> 147,456
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-17 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Sequential: 3-18 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> 8,448
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-19 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-4 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-20 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> 147,456
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-21 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-22 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-23 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> 147,456
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-24 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-25 &lt;span style="color:#f92672">[&lt;/span>16, 128, 28, 28&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Sequential: 1-7 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-5 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-26 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> 294,912
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-27 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-28 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-29 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> 589,824
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-30 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Sequential: 3-31 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> 33,280
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-32 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-6 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-33 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> 589,824
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-34 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-35 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-36 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> 589,824
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-37 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-38 &lt;span style="color:#f92672">[&lt;/span>16, 256, 14, 14&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Sequential: 1-8 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-7 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-39 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 1,179,648
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-40 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 1,024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-41 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-42 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 2,359,296
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-43 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 1,024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Sequential: 3-44 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 132,096
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-45 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─BasicBlock: 2-8 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-46 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 2,359,296
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-47 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 1,024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-48 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─Conv2d: 3-49 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 2,359,296
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─BatchNorm2d: 3-50 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> 1,024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─ReLU: 3-51 &lt;span style="color:#f92672">[&lt;/span>16, 512, 7, 7&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─AdaptiveAvgPool2d: 1-9 &lt;span style="color:#f92672">[&lt;/span>16, 512, 1, 1&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Linear: 1-10 &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> 513,000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total params: 11,689,512
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Trainable params: 11,689,512
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Non-trainable params: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total mult-adds &lt;span style="color:#f92672">(&lt;/span>G&lt;span style="color:#f92672">)&lt;/span>: 29.03
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 9.63
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Forward/backward pass size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 635.96
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Params size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 46.76
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Estimated Total Size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 692.35
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-transformer">§3 Transformer&lt;/h2>
&lt;p>Transformer is a general function fitter with residual connections, which is a more general FFN.&lt;/p>
&lt;h3 id="31-embedding">§3.1 Embedding&lt;/h3>
&lt;p>Embedding is ordered higher-dimensional representation vectors.&lt;/p>
&lt;h4 id="311-nnembedding">§3.1.1 &lt;code>nn.Embedding&lt;/code>&lt;/h4>
&lt;p>&lt;a href="https://github.com/openai/tiktoken">tiktoken&lt;/a>&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>nn.Embedding&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Embedding.html">&lt;code>nn.Embedding&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">NUM_INDEX&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">EMBEDDING_DIM&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">embedding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">NUM_INDEX&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">EMBEDDING_DIM&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">embedding&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">weight&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">detach&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">index&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">LongTensor&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[&lt;/span> 0.0378, 1.0396, -0.9673, 0.9697&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.7824, 1.8141, 0.5336, -1.6396&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.1903, 0.6592, 1.4589, -0.6018&lt;span style="color:#f92672">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[&lt;/span> 0.1903, 0.6592, 1.4589, -0.6018&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0378, 1.0396, -0.9673, 0.9697&lt;span style="color:#f92672">]]&lt;/span>, &lt;span style="color:#111">grad_fn&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&amp;lt;EmbeddingBackward0&amp;gt;&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>F.one_hot&lt;/code> then linear&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.one_hot.html">&lt;code>F.one_hot&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">one_hot&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">F&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">one_hot&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_classes&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">NUM_INDEX&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">one_hot&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">linear&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">NUM_INDEX&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">EMBEDDING_DIM&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">bias&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">linear&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">weight&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Parameter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">embedding&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">weight&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">T&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">detach&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">one_hot&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">()))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[&lt;/span>0, 0, 1&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>1, 0, 0&lt;span style="color:#f92672">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[&lt;/span> 0.1903, 0.6592, 1.4589, -0.6018&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0378, 1.0396, -0.9673, 0.9697&lt;span style="color:#f92672">]]&lt;/span>, &lt;span style="color:#111">grad_fn&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&amp;lt;MmBackward0&amp;gt;&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#75715e"># same result&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="312-sinusoidal-positional-embedding">§3.1.2 Sinusoidal Positional Embedding&lt;/h4>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>class Embedding&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">max_seq_length&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">embedding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">max_seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">math&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sqrt&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>class PositionalEncoding&lt;/code>&lt;/p>
&lt;p>The positional encoding $$\begin{aligned} PE_{(pos, 2i)} &amp;amp;= \sin(\frac{pos}{ 10000^{2i/{d_{model}}}}) \\ PE_{(pos, 2i + 1)} &amp;amp;= \cos(\frac{pos}{10000^{2i/{d_{model}}}}) \end{aligned}$$, where $pos$ is each element in the sequence up to &lt;code>max_seq_length&lt;/code>, and $d_{model}$ is &lt;code>hidden_dim&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PositionalEncoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">max_seq_length&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pe&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">zeros&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">max_seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">position&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">arange&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">max_seq_length&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">unsqueeze&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">div_term&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">arange&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">math&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">10000.0&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pe&lt;/span>&lt;span style="color:#111">[:,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">::&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sin&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">position&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">div_term&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pe&lt;/span>&lt;span style="color:#111">[:,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">::&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cos&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">position&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">div_term&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pe&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pe&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">unsqueeze&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pe&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">pe&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">seq_length&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pe&lt;/span>&lt;span style="color:#111">[:,&lt;/span> &lt;span style="color:#111">:&lt;/span>&lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">]&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">requires_grad_&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>testing&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">randint&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">196&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length], words as int numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">embeddings&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Embedding&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">embeddings&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length, hidden_dim]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">positional_encoding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">PositionalEncoding&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">positional_encoding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length, hidden_dim]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 196, 768&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 196, 768&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>We will often see another way to write it:&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>class SinusoidalPosEmb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">SinusoidalPosEmb&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">M&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10000&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">M&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">M&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">device&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">device&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">half_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">emb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">math&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">M&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#111">half_dim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">emb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">exp&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">arange&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">half_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">device&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">device&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">emb&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">emb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">emb&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#00a8c8">None&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">emb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cat&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">emb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">sin&lt;/span>&lt;span style="color:#111">(),&lt;/span> &lt;span style="color:#111">emb&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cos&lt;/span>&lt;span style="color:#111">()),&lt;/span> &lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">emb&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>testing&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">rand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">196&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length], words as float numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">sinusoidal_pos_emb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">SinusoidalPosEmb&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dummy&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">sinusoidal_pos_emb&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dummy&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length, hidden_dim]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 196, 768&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="32-transformer-encoder">§3.2 Transformer Encoder&lt;/h3>
&lt;h4 id="321-ffn-mlp">§3.2.1 FFN (MLP)&lt;/h4>
&lt;p>&lt;a href="https://jmlr.org/papers/volume3/bengio03a/bengio03a.pdf">&lt;em>A Neural Probabilistic Language Model&lt;/em>&lt;/a>&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>Equation&lt;/p>
&lt;p>Feed Forward Network $$\text{FFN}(X)=(\text{ReLU}(XW_1+b_1))W_2+b_2$$, where $\text{ReLU}(x)=\max{(0,x)}$. Here we replace &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.ReLU.html">nn.ReLU&lt;/a> with &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.GELU.html">nn.GELU&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>class FFN&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">FFN&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">in_features&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_features&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3072&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">out_features&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">linear1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">in_features&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_features&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">act&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">GELU&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">linear2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_features&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">out_features&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">linear1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">act&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">linear2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="322-multiheadattention">§3.2.2 MultiheadAttention&lt;/h4>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.MultiheadAttention.html">&lt;code>nn.MultiheadAttention&lt;/code>&lt;/a>&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>Equation&lt;/p>
&lt;p>We define $$\text{Attention}(Q, K, V) = \text{Softmax}(\frac{QK^\top}{\sqrt{d_{k}}})V$$, where for a vector $\vec{z_i}$, $\text{Softmax}(\vec{z_i}) = \frac{e^{\vec{z_i}}}{\sum_{i=0}^N e^{\vec{z_i}}}$, and $$\text{MultiheadAttention} (Q, K, V) = \text{Concat}(\text{head}_1, \cdots, \text{head}_h) W^0$$, where $\text{head}_i = \text{Attention} (QW^Q_i, KW^K_i, VW^V_i)$, and $h$ is &lt;code>num_heads&lt;/code> in the code.&lt;/p>
&lt;p>The advantage of Softmax:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Matthew_effect">Matthew&amp;rsquo;s effect&lt;/a>&lt;/li>
&lt;li>Non-linearity&lt;/li>
&lt;li>Normalization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>class MultiheadAttention&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MultiheadAttention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">num_heads&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">d_k&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">qkv&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">mask&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">qkv&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">qkv&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">view&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">permute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># q, k, v shape: [batch_size, num_heads, seq_length, hidden_dim // num_heads]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">q&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">k&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">v&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># attn shape: [batch_size, num_heads, seq_length, seq_length]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">d_k&lt;/span> &lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">q&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">@&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">k&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transpose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#75715e"># `torch.matmul`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">mask&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">masked_fill_&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75715e"># `torch.Tensor.masked_fill_`, add mask by broadcasting&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">triu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ones&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bool&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">diagonal&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;-inf&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">softmax&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">@&lt;/span> &lt;span style="color:#111">v&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transpose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">reshape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length, hidden_dim]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>testing&lt;/p>
&lt;p>Add 4 lines of &lt;code>print()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MultiheadAttention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">num_heads&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">d_k&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">qkv&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">mask&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">qkv&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">qkv&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">view&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">permute&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># q, k, v shape: [batch_size, num_heads, seq_length, hidden_dim // num_heads]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">q&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">k&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">v&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">qkv&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># attn shape: [batch_size, num_heads, seq_length, seq_length]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">d_k&lt;/span> &lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">q&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">@&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">k&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transpose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">))&lt;/span>&lt;span style="color:#75715e"># `torch.matmul`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">mask&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">masked_fill_&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75715e"># `torch.Tensor.masked_fill_`, add mask by broadcasting&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">triu&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ones&lt;/span>&lt;span style="color:#111">((&lt;/span>&lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">dtype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">bool&lt;/span>&lt;span style="color:#111">),&lt;/span> &lt;span style="color:#111">diagonal&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">float&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;-inf&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">softmax&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">attn&lt;/span> &lt;span style="color:#f92672">@&lt;/span> &lt;span style="color:#111">v&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transpose&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">reshape&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">seq_length&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># [batch_size, seq_length, hidden_dim]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">rand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e">#[batch_size, seq_length, hidden_dim]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">multihead_attention&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">MultiheadAttention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;No mask:&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">_&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">multihead_attention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;Masked:&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">_&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">multihead_attention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">mask&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>No mask:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[[[&lt;/span>-0.0302, -0.0241, -0.0071, -0.0822&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0041, 0.0307, 0.0372, -0.0366&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.0460, -0.0571, 0.1467, 0.1020&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.0685, -0.0811, 0.1513, 0.0700&lt;span style="color:#f92672">]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> 0.0744, 0.0987, 0.2944, 0.3069&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0538, 0.0855, 0.2632, 0.2898&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.0052, 0.0453, 0.1585, 0.2132&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0034, 0.0774, 0.2627, 0.3394&lt;span style="color:#f92672">]]]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">grad_fn&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&amp;lt;UnsafeViewBackward0&amp;gt;&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 2, 4, 4&lt;span style="color:#f92672">])&lt;/span>&lt;span style="color:#75715e"># [batch_size, num_heads, seq_length, seq_length]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[[[&lt;/span>0.2513, 0.2529, 0.2572, 0.2386&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2487, 0.2554, 0.2571, 0.2388&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2293, 0.2268, 0.2780, 0.2659&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2282, 0.2254, 0.2843, 0.2621&lt;span style="color:#f92672">]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span>0.2206, 0.2261, 0.2749, 0.2784&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2207, 0.2278, 0.2721, 0.2794&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2235, 0.2351, 0.2633, 0.2781&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2095, 0.2256, 0.2716, 0.2932&lt;span style="color:#f92672">]]]]&lt;/span>, &lt;span style="color:#111">grad_fn&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&amp;lt;SoftmaxBackward0&amp;gt;&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 2, 4, 4&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Masked:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[[[&lt;/span>-0.0302, -inf, -inf, -inf&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0041, 0.0307, -inf, -inf&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.0460, -0.0571, 0.1467, -inf&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.0685, -0.0811, 0.1513, 0.0700&lt;span style="color:#f92672">]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> 0.0744, -inf, -inf, -inf&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0538, 0.0855, -inf, -inf&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>-0.0052, 0.0453, 0.1585, -inf&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> 0.0034, 0.0774, 0.2627, 0.3394&lt;span style="color:#f92672">]]]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">grad_fn&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&amp;lt;MaskedFillBackward0&amp;gt;&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 2, 4, 4&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tensor&lt;span style="color:#f92672">([[[[&lt;/span>1.0000, 0.0000, 0.0000, 0.0000&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.4934, 0.5066, 0.0000, 0.0000&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.3124, 0.3089, 0.3787, 0.0000&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2282, 0.2254, 0.2843, 0.2621&lt;span style="color:#f92672">]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span>1.0000, 0.0000, 0.0000, 0.0000&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.4921, 0.5079, 0.0000, 0.0000&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.3096, 0.3257, 0.3647, 0.0000&lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>0.2095, 0.2256, 0.2716, 0.2932&lt;span style="color:#f92672">]]]]&lt;/span>, &lt;span style="color:#111">grad_fn&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&amp;lt;SoftmaxBackward0&amp;gt;&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch.Size&lt;span style="color:#f92672">([&lt;/span>1, 2, 4, 4&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="323-transformerencoderlayer">§3.2.3 TransformerEncoderLayer&lt;/h4>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.TransformerEncoderLayer.html">&lt;code>nn.TransformerEncoderLayer&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TransformerEncoderLayer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3072&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">attention&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">MultiheadAttention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">layer_norm_1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">LayerNorm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ffn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">FFN&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">layer_norm_2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">LayerNorm&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">residual&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">attention&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">layer_norm_1&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">residual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">residual&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ffn&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">layer_norm_2&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">residual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or you can put Layer Norm before Attention, see &lt;a href="https://arxiv.org/abs/2002.04745">[2002.04745] &lt;em>On Layer Normalization in the Transformer Architecture&lt;/em>&lt;/a>.&lt;/p>
&lt;h4 id="324-transformerencoder">§3.2.4 TransformerEncoder&lt;/h4>
&lt;p>&lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.TransformerEncoder.html">&lt;code>nn.TransformerEncoder&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">TransformerEncoder&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3072&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transformer_encoder_layers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">ModuleList&lt;/span>&lt;span style="color:#111">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TransformerEncoderLayer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">_&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#111">transformer_encoder_layer&lt;/span> &lt;span style="color:#f92672">in&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transformer_encoder_layers&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">transformer_encoder_layer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="33-encoder-decoder-encoder-only-decoder-only">§3.3 Encoder-Decoder, Encoder-Only, Decoder-Only&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Encoder-Decoder: seq2seq&lt;/th>
&lt;th>Encoder-Decoder: Transformer&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;img
src="https://d2l.ai/_images/seq2seq-state.svg"
alt=""
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/td>
&lt;td>&lt;img
src="https://d2l.ai/_images/transformer.svg"
alt=""
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>| &lt;a href="https://www.practicalai.io/understanding-transformer-model-architectures/">&lt;em>Understanding Transformer model architectures&lt;/em> (practicalai.io)&lt;/a> | &lt;a href="https://d2l.ai/chapter_attention-mechanisms-and-transformers/large-pretraining-transformers.html">&lt;em>11.9. Large-Scale Pretraining with Transformers&lt;/em> (d2l.ai)&lt;/a> |&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:left">NLP&lt;/th>
&lt;th style="text-align:left">CV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">Encoder-Decoder&lt;/td>
&lt;td style="text-align:left">&lt;a href="https://arxiv.org/abs/1706.03762">[1706.03762] &lt;em>Attention is All You Need&lt;/em>&lt;/a>, &lt;a href="https://arxiv.org/abs/1910.10683">T5&lt;/a>&lt;/td>
&lt;td style="text-align:left">&lt;a href="https://arxiv.org/abs/2106.08254">BEiT&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Encoder-Only&lt;/td>
&lt;td style="text-align:left">&lt;a href="https://arxiv.org/abs/1810.04805">BERT&lt;/a>&lt;/td>
&lt;td style="text-align:left">&lt;a href="https://arxiv.org/abs/2010.11929">ViT&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Decoder-Only&lt;/td>
&lt;td style="text-align:left">&lt;a href="https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf">GPT&lt;/a>, &lt;a href="https://cdn.openai.com/better-language-models/language_models_are_unsupervised_multitask_learners.pdf">GPT-2&lt;/a>, &lt;a href="https://arxiv.org/abs/2005.14165">GPT-3&lt;/a>, &lt;a href="https://github.com/karpathy/nanoGPT">nanoGPT&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Fig.1 of &lt;a href="https://arxiv.org/abs/2304.13712">[2304.13712] &lt;em>Harnessing the Power of LLMs in Practice: A Survey on ChatGPT and Beyond&lt;/em>&lt;/a>:&lt;/p>
&lt;p>&lt;img
src="https://pbs.twimg.com/media/GBrF-tHWYAA10wE?format=png"
alt="Fig1_of_2304.13712"
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/p>
&lt;h3 id="34-attention-is-all-you-need">§3.4 Attention is All You Need&lt;/h3>
&lt;p>&lt;a href="https://arxiv.org/abs/1706.03762">[1706.03762] &lt;em>Attention Is All You Need&lt;/em>&lt;/a>&lt;/p>
&lt;ul>
&lt;li>A pure Transformer structure instead of RNNs.&lt;/li>
&lt;li>Use &lt;a href="https://pytorch.org/docs/stable/generated/torch.nn.Softmax.html">Softmax&lt;/a> to let query $Q$ choose different $K^\mathsf{T}$.&lt;/li>
&lt;li>The encoder provides keys $K$ and value $V$, while the decoder provides query $Q$.&lt;/li>
&lt;/ul>
&lt;h4 id="341-fine-tuning-of-llm">§3.4.1 fine-tuning of LLM&lt;/h4>
&lt;p>The ULMFiT 3-step approach (see Fig.1 of &lt;a href="https://arxiv.org/abs/1801.06146">[1801.06146] &lt;em>Universal Language Model Fine-tuning for Text Classification&lt;/em>&lt;/a>):&lt;/p>
&lt;ol>
&lt;li>Language Model pre-training.&lt;/li>
&lt;li>Instruction tuning.&lt;/li>
&lt;li>RLHF (Reinforcement Learning from Human Feedback).&lt;/li>
&lt;/ol>
&lt;h3 id="35-vision-transformer-vit">§3.5 Vision Transformer (ViT)&lt;/h3>
&lt;p>&lt;a href="https://arxiv.org/abs/2010.11929">[2010.11929] &lt;em>An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale&lt;/em>&lt;/a>&lt;/p>
&lt;ul>
&lt;li>A pure Transformer structure instead of CNNs.&lt;/li>
&lt;li>General function fitter instead of good inductive prior.&lt;/li>
&lt;li>With enough data.&lt;/li>
&lt;/ul>
&lt;p>&lt;img
src="https://d2l.ai/_images/vit.svg"
alt=""
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/p>
&lt;h4 id="351-patchembedding">§3.5.1 PatchEmbedding&lt;/h4>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>class PatchEmbedding&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PatchEmbedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv2d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">out_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">kernel_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">stride&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">padding&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">conv2d&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">view&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>class PatchEmbedding_noConv&lt;/code>&lt;/p>
&lt;p>or without convolution:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PatchEmbedding_noConv&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">view&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="352-visiontransformer">§3.5.2 VisionTransformer&lt;/h4>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>Homemade &lt;code>TransformerEncoder&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">VisionTransformer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">image_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_classes&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3072&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">patch_embedding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">PatchEmbedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pos_embedding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Parameter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">image_size&lt;/span> &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">normal_&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">std&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.02&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">class_token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Parameter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transformer_encoder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">TransformerEncoder&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_classes&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">patch_embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pos_embedding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_class_token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">class_token&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">expand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cat&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#111">batch_class_token&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transformer_encoder&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">[:,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">:])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">summary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">VisionTransformer&lt;/span>&lt;span style="color:#111">(),&lt;/span>&lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Layer &lt;span style="color:#f92672">(&lt;/span>type:depth-idx&lt;span style="color:#f92672">)&lt;/span> Output Shape Param &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VisionTransformer &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> 151,296
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─PatchEmbedding: 1-1 &lt;span style="color:#f92672">[&lt;/span>16, 196, 768&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-1 &lt;span style="color:#f92672">[&lt;/span>16, 768, 14, 14&lt;span style="color:#f92672">]&lt;/span> 590,592
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─TransformerEncoder: 1-2 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ModuleList: 2-2 -- --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-1 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-2 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-3 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-4 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-5 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-6 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-7 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-8 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-9 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-10 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-11 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-12 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Linear: 1-3 &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> 769,000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total params: 86,565,352
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Trainable params: 86,565,352
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Non-trainable params: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total mult-adds &lt;span style="color:#f92672">(&lt;/span>G&lt;span style="color:#f92672">)&lt;/span>: 3.23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 9.63
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Forward/backward pass size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 2575.69
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Params size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 345.66
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Estimated Total Size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 2930.98
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>nn.TransformerEncoder&lt;/code> (&lt;code>torch 2.1.0+cu118&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">VisionTransformer_torch&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Module&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">image_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_classes&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3072&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">super&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">patch_embedding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">PatchEmbedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">in_channels&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pos_embedding&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Parameter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">image_size&lt;/span> &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#111">patch_size&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">normal_&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">std&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.02&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">class_token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Parameter&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">empty&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">transformer_encoder_layer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">TransformerEncoderLayer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">d_model&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">nhead&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">num_heads&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dim_feedforward&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">ffn_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">dropout&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">batch_first&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transformer_encoder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">TransformerEncoder&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">transformer_encoder_layer&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">num_layers&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">hidden_dim&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">num_classes&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">forward&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">patch_embedding&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">pos_embedding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">shape&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">batch_class_token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">class_token&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">expand&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cat&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#111">batch_class_token&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">],&lt;/span> &lt;span style="color:#111">dim&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">transformer_encoder&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">self&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">proj&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">x&lt;/span>&lt;span style="color:#111">[:,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">:])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">x&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">summary&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">VisionTransformer_torch&lt;/span>&lt;span style="color:#111">(),&lt;/span>&lt;span style="color:#111">input_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>will, surprisingly, get the same total parameters (&lt;code>86,565,352&lt;/code>), though the sizes (MB) are way smaller:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Layer &lt;span style="color:#f92672">(&lt;/span>type:depth-idx&lt;span style="color:#f92672">)&lt;/span> Output Shape Param &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VisionTransformer_torch &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> 151,296
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─PatchEmbedding: 1-1 &lt;span style="color:#f92672">[&lt;/span>16, 196, 768&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─Conv2d: 2-1 &lt;span style="color:#f92672">[&lt;/span>16, 768, 14, 14&lt;span style="color:#f92672">]&lt;/span> 590,592
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─TransformerEncoder: 1-2 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └─ModuleList: 2-2 -- --
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-1 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-2 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-3 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-4 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-5 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-6 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-7 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-8 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-9 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-10 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-11 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └─TransformerEncoderLayer: 3-12 &lt;span style="color:#f92672">[&lt;/span>16, 197, 768&lt;span style="color:#f92672">]&lt;/span> 7,087,872
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─Linear: 1-3 &lt;span style="color:#f92672">[&lt;/span>16, 1000&lt;span style="color:#f92672">]&lt;/span> 769,000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total params: 86,565,352
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Trainable params: 86,565,352
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Non-trainable params: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total mult-adds &lt;span style="color:#f92672">(&lt;/span>G&lt;span style="color:#f92672">)&lt;/span>: 1.86
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 9.63
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Forward/backward pass size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 19.40
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Params size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 5.44
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Estimated Total Size &lt;span style="color:#f92672">(&lt;/span>MB&lt;span style="color:#f92672">)&lt;/span>: 34.47
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">===============================================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="353-fine-tuning-of-vit">§3.5.3 fine-tuning of ViT&lt;/h4>
&lt;p>&lt;a href="https://arxiv.org/abs/2203.09795">[2203.09795] &lt;em>Three things everyone should know about Vision Transformers&lt;/em>&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Parallel vision transformers.&lt;/li>
&lt;li>Fine-tuning attention is all you need.&lt;/li>
&lt;li>Patch preprocessing with masked self-supervised learning.&lt;/li>
&lt;/ul>
&lt;h2 id="4-fastai">§4 &lt;code>fastai&lt;/code>&lt;/h2>
&lt;p>| &lt;a href="https://github.com/fastai/fastai">fastai (GitHub)&lt;/a> | &lt;a href="https://docs.fast.ai/">fastai (docs)&lt;/a> | &lt;a href="https://course.fast.ai/">Practical Deep Learning&lt;/a> |&lt;/p>
&lt;img src="https://docs.fast.ai/images/layered.png" width="400">
&lt;h3 id="41-dataloaders">§4.1 &lt;code>Dataloaders&lt;/code>&lt;/h3>
&lt;p>We did not write &lt;a href="https://pytorch.org/tutorials/beginner/basics/data_tutorial.html">&lt;code>Datasets&lt;/code> &amp;amp; &lt;code>DataLoaders&lt;/code>&lt;/a>, because it&amp;rsquo;s highly variable from tasks to tasks. In general I would suggest:&lt;/p>
&lt;ol>
&lt;li>Let your brain (bio-neural networks) understand the dataset intuitively by visualizing lots of examples from the dataset. (See &lt;a href="https://karpathy.github.io/2019/04/25/recipe/">&lt;em>A Recipe for Training Neural Networks&lt;/em>&lt;/a>)&lt;/li>
&lt;li>Use &lt;a href="https://github.com/pola-rs/polars">&lt;code>polars&lt;/code>&lt;/a>, &lt;a href="https://github.com/modularml/mojo">&lt;code>mojo&lt;/code>&lt;/a> to load data because it&amp;rsquo;s faster and more memory saving.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="https://docs.fast.ai/examples/migrating_pytorch_verbose.html">Pytorch to fastai details&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torch.utils.data&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">Dataset&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">DataLoader&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">SequentialSampler&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">BatchSampler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">fastai.vision.all&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># subclass `torch.utils.data.Dataset` to create a custom Dataset&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MyDataset&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">Dataset&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__init__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__len__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#111">__getitem__&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">self&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">index&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">image&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">label&lt;/span>&lt;span style="color:#75715e"># shape: image is [C, H, W], label is []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># use `torch.utils.data` to load data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dataset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">MyDataset&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">data_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">len&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">train_size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">int&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">0.8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#111">data_size&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># 80% is train_loader&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">indices&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">list&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">range&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data_size&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">train_indices&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">indices&lt;/span>&lt;span style="color:#111">[:&lt;/span>&lt;span style="color:#111">train_size&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">train_batch_sampler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">BatchSampler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">SequentialSampler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">train_indices&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">drop_last&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">train_loader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">DataLoader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">num_workers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">batch_sampler&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">train_batch_sampler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">val_indices&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">indices&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">train_size&lt;/span>&lt;span style="color:#111">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">val_batch_sampler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">BatchSampler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">SequentialSampler&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">val_indices&lt;/span>&lt;span style="color:#111">),&lt;/span>&lt;span style="color:#111">batch_size&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">drop_last&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">val_loader&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">DataLoader&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dataset&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">num_workers&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">batch_sampler&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">val_batch_sampler&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># use `fastai.vision.all.DataLoaders` to combine training data and validation data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">DataLoaders&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">train_loader&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">val_loader&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or you can use &lt;a href="https://docs.fast.ai/tutorial.datablock.html">&lt;code>DataBlock&lt;/code>&lt;/a>.&lt;/p>
&lt;h3 id="42-learner">§4.2 &lt;code>Learner&lt;/code>&lt;/h3>
&lt;p>Load the model:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">MyModel&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">cuda&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>fastai.vision.all.OptimWrapper&lt;/code> to wrap &lt;a href="https://arxiv.org/abs/1711.05101">&lt;code>AdamW&lt;/code>&lt;/a> optimizer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">WrapperAdamW&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">param_groups&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#111">kwargs&lt;/span>&lt;span style="color:#111">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">OptimWrapper&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">param_groups&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">torch&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">optim&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">AdamW&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.fast.ai/learner.html">&lt;code>Learner&lt;/code>&lt;/a>, &lt;a href="https://docs.fast.ai/callback.fp16.html#learner.to_fp16">&lt;code>Learner.to_fp16&lt;/code>&lt;/a>, &lt;a href="https://docs.fast.ai/callback.core.html">&lt;code>Callbacks&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">functools&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">partial&lt;/span>&lt;span style="color:#75715e"># python standard library&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Learner&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">dls&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">path&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;custom_path&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">loss_func&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">custom_loss&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">metrics&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#111">custom_metric&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">opt_func&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">partial&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">WrapperAdamW&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">eps&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1e-7&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># opt_func=partial(OptimWrapper,opt=torch.optim.AdamW,eps=1e-7)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">cbs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">CSVLogger&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">GradientClip&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#ae81ff">3.0&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">EMACallback&lt;/span>&lt;span style="color:#111">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">SaveModelCallback&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">monitor&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;custom_metric&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">comp&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">np&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">less&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">every_epoch&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">GradientAccumulation&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">n_acc&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4096&lt;/span>&lt;span style="color:#f92672">//&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># divided by `batch_size`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to_fp16&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.fast.ai/callback.schedule.html#learner.lr_find">&lt;code>Learner.lr_find&lt;/code>&lt;/a>, &lt;a href="https://arxiv.org/abs/1506.01186">[1506.01186] &lt;em>Cyclical Learning Rates for Training Neural Networks&lt;/em>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">lr_find&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">suggest_funcs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">slide&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">valley&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.fast.ai/callback.schedule.html#learner.fit_one_cycle">&lt;code>Learner.fit_one_cycle&lt;/code>&lt;/a> uses &lt;a href="https://arxiv.org/abs/1708.07120">1cycle policy&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fit_one_cycle&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">lr_max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1e-5&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">wd&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.05&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pct_start&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.25&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">div&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">25&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">div_final&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">100000&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.fast.ai/learner.html#learner.save">&lt;code>Learner.save&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">save&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;my_model_opt&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">with_opt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">save&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;my_model&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">with_opt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-transfer-learning">§5 Transfer Learning&lt;/h2>
&lt;p>For different dataset and different goals.&lt;/p>
&lt;h3 id="51-load-pretrained-resnet-vit">§5.1 Load Pretrained ResNet, ViT&lt;/h3>
&lt;p>| &lt;a href="https://www.kaggle.com/code/csaroff/which-timm-models-are-best-2023-11-29/notebook">Which Timm Models Are Best 2023-11-29 | Kaggle&lt;/a> |&lt;/p>
&lt;div class="tabset">&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;code>ResNet101&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://docs.fast.ai/vision.learner.html#vision_learner">&lt;code>fastai.vision.all.vision_learner&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">fastai.vision.all&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># https://github.com/pytorch/vision/tree/main/torchvision/models&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torchvision.models&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">resnet101&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># https://pytorch.org/vision/stable/models.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torchvision.models&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ResNet101_Weights&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">vision_learner&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">dls&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">resnet101&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">pretrained&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">True&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">weights&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">ResNet101_Weights&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">IMAGENET1K_V2&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">metrics&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">error_rate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fine_tune&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">freeze_epochs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#75715e"># freeze_epochs run first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">epochs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">save&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;finetuned_resnet101&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">with_opt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>ViT_B_16&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://docs.fast.ai/learner.html">&lt;code>fastai.vision.all.Learner&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">fastai.vision.all&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torchvision.models&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">vit_b_16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">torchvision.models&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ViT_B_16_Weights&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">dls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># https://github.com/rasbt/ViT-finetuning-scripts/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">vit_b_16&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">weights&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">ViT_B_16_Weights&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">IMAGENET1K_V1&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">heads&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">head&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">nn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Linear&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">in_features&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">768&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">out_features&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#75715e"># replace projection layer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">model&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">to&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;cuda&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">Learner&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">dls&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">model&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metrics&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">error_rate&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">fine_tune&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">freeze_epochs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">epochs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">save&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;finetuned_vit_b_16&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">with_opt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">False&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="52-acousticgravitational-wave-classification">§5.2 Acoustic/Gravitational Wave Classification&lt;/h3>
&lt;p>&lt;a href="https://arxiv.org/abs/1912.11370">[1912.11370] &lt;em>Big Transfer (BiT): General Visual Representation Learning&lt;/em>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>We scale up pre-training, and propose a simple recipe that we call Big Transfer (BiT).&lt;/p>
&lt;/blockquote>
&lt;h4 id="521-acoustic-wave-classification">§5.2.1 Acoustic Wave Classification&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://etown.medium.com/great-results-on-audio-classification-with-fastai-library-ccaf906c5f52">&lt;em>Great results on audio classification with fastai library&lt;/em> | by Ethan Sutin&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/etown/dl1/blob/master/UrbanSoundClassification.ipynb">&lt;code>UrbanSoundClassification.ipynb&lt;/code> (GitHub)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Each subfigure of the figure below is a &lt;em>Power Spectrum&lt;/em>:&lt;/p>
&lt;ul>
&lt;li>The horizontal axis is &lt;em>Time&lt;/em> ($\text{s}$).&lt;/li>
&lt;li>The vertical axis is &lt;em>Frequency&lt;/em> ($\text{Hz}$).&lt;/li>
&lt;li>The color (from dark to red to white) is &lt;em>Sound Intensity Level&lt;/em> ($\text{dB}$):&lt;/li>
&lt;/ul>
&lt;p>&lt;img
src="https://miro.medium.com/v2/resize:fit:1100/format:webp/1*D_yXVrrJD1Y46Z1T0OTOVA.png"
alt=""
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/p>
&lt;p>Use &lt;a href="https://librosa.org/doc/latest/generated/librosa.display.specshow.html#librosa.display.specshow">&lt;code>librosa.display.specshow&lt;/code>&lt;/a> to draw &lt;em>Power Spectrum&lt;/em>, then save as &lt;code>.png&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">S&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">librosa&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">feature&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">melspectrogram&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">y&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">samples&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">sr&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">sample_rate&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">librosa&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">display&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">specshow&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">librosa&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">power_to_db&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">S&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">ref&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">np&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">max&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">spectrogram_path&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#111">fold&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#111">Path&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">audio_file&lt;/span>&lt;span style="color:#111">)&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">replace&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;.wav&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#d88200">&amp;#39;.png&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">plt&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">savefig&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">filename&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">dpi&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">400&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">bbox_inches&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#39;tight&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>&lt;span style="color:#111">pad_inches&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>fastai&lt;/code> to load pretrained model &lt;code>ResNet34&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">learn&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">cnn_learner&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">data&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">models&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">resnet34&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">metrics&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">error_rate&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="522-gravitational-wave-classification">§5.2.2 Gravitational Wave Classification&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://arxiv.org/abs/2303.13917">[2303.13917] &lt;em>Convolutional Neural Networks for the classification of glitches in gravitational-wave data streams&lt;/em>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The picture below is Fig.2 of the paper:&lt;/p>
&lt;p>&lt;img
src="20231011-wow-it-fits-secondhand-machine-learning-05_2303.13917_GWs.png"
alt=""
loading="lazy"
decoding="async"
class="full-width"
/>
&lt;/p>
&lt;p>Use &lt;code>fastai&lt;/code> to load pretrained model &lt;code>ResNet18&lt;/code>, &lt;code>ResNet26&lt;/code>, &lt;code>ResNet34&lt;/code>, &lt;code>ResNet50&lt;/code>, &lt;code>ConvNext_Nano&lt;/code>, &lt;code>ConvNext_Tiny&lt;/code>.&lt;/p>
&lt;h3 id="53-category-unknown">§5.3 Category &amp;ldquo;Unknown&amp;rdquo;&lt;/h3>
&lt;ul>
&lt;li>Choose the size of the model by the size of the dataset, to avoid overfitting.&lt;/li>
&lt;li>When the output probability of the final MLP layer is not dominated by one category (less than 95% or some threshold), you should be extra careful. Because actually this prediction is not correct.&lt;/li>
&lt;/ul></description><author>Chen Li</author><guid>https://ChenLi2049.github.io/posts/20231011-wow-it-fits-secondhand-machine-learning/</guid><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate></item><item><title>Safety Issue of Metaverse</title><link>https://ChenLi2049.github.io/posts/20230929-safety-issue-of-metaverse/</link><description>&lt;p>In &lt;a href="https://www.youtube.com/watch?v=MVYrJJNdrEg">this interview about Metaverse&lt;/a>, Lex does not mention safety issue, not even once. I understand how exciting he must be to cross the uncanny valley, but this is highly unprofessional and the interview is approximately a commercial.&lt;/p>
&lt;p>I don&amp;rsquo;t think I have to stress how absurd this is:&lt;/p>
&lt;ul>
&lt;li>Scanning your head, more in detail. Because they &amp;ldquo;want to capture your facial expressions&amp;rdquo;.&lt;/li>
&lt;li>Scanning your house (possibly your family and friends).&lt;/li>
&lt;/ul>
&lt;p>Potentially, anybody can use your avatar to say stuff. And with the help of voice imitation, it will even sound like you. Deepfake still requires the target&amp;rsquo;s pictures or videos for generation, but now you, the target, are giving these information away. I&amp;rsquo;m not saying the company will do it. &lt;em>Leakage is all you need&lt;/em>.&lt;/p>
&lt;p>Privacy, copyright and labeling slavery have always been major ethical problems for Machine Learning. On the contrary, &lt;a href="https://chenli2049.github.io/posts/20230810-gravity-spy-2.0/">classifying patterns of Gravitational Waves&lt;/a> or &lt;a href="https://chenli2049.github.io/posts/20230828-new-paper-on-arxiv-new-repository-iseecube/">reconstructing neutrino events&lt;/a> don&amp;rsquo;t have these ethical problems. Because there are less actual factors involved. And, even if Neural Networks went crazy in the process, nobody would get hurt. One of the examples of its potential craziness is that detection of a disease is related to how old the picture is, see &lt;a href="https://www.youtube.com/watch?v=EUrOxh_0leE">&lt;em>AI does not exist but it will ruin everything anyway&lt;/em> - YouTube&lt;/a>.&lt;/p>
&lt;p>I read about this meme somewhere:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Me: My dad says you steal users&amp;rsquo; personal information.&lt;/li>
&lt;li>Mark Zuckerberg: He&amp;rsquo;s not your dad.&lt;/li>
&lt;/ul>
&lt;/blockquote></description><author>Chen Li</author><guid>https://ChenLi2049.github.io/posts/20230929-safety-issue-of-metaverse/</guid><pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate></item><item><title>Machine Learning Notes: A Hackers' Guide to Language Models</title><link>https://ChenLi2049.github.io/posts/20230928-machine-learning-notes-a-hackers-guide-to-language-models/</link><description>&lt;p>Jeremy Howard put a video on YouTube about LLMs: &lt;a href="https://www.youtube.com/watch?v=jkrNMKz9pWU">A Hackers&amp;rsquo; Guide to Language Models - YouTube&lt;/a>, and the GitHub link is &lt;a href="https://github.com/fastai/lm-hackers/tree/main">lm-hackers&lt;/a>. I would watch it again if I were to do the research on LLMs.&lt;/p>
&lt;p>The level of detail in this video is amazing. And by &amp;ldquo;the level of detail&amp;rdquo;, I mean&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Python code that teaches ChatGPT to run a Python function. Which is powerful, quite handy and embarrassingly simple&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Links to GitHub repositories, websites, etc. They are often the most useful, because they are sources you will go to &lt;strong>when coding&lt;/strong>, or from these sources you can expand to other sources. Thus they are really helpful if you want to actually do the work instead of having a vague understanding.&lt;/p>
&lt;p>When coding, referring to certain links is a habit that may take some time to grow. I used to have the impression that coding is constantly hitting the keyboard (probably from &lt;em>Black Books&lt;/em> S02E03), but what really happened to me is that I spend 70% of time searching and reading other people&amp;rsquo;s code (referring to certain links), 20% writing and testing, 10% debugging. And by showing these links, he reduces the time of searching and reading for the viewers.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>In a sense, they are more close to experience than knowledge. I&amp;rsquo;ll try to do the same thing, try to.&lt;/p>
&lt;p>By the way, it&amp;rsquo;s astonishing to see how Machine Learning community (GitHub repositories, papers, packages, pre-trained models, fine-tuned models, websites, services) can flourish on one task. The variety, both the good and the bad, is beautiful.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I love &amp;ldquo;embarrassingly simple&amp;rdquo;. The phrase &amp;ldquo;embarrassingly simple&amp;rdquo; is often used to describe a trend in Machine Learning that, classical heuristic systems are replaced by end-to-end learning systems. Because the world is more complicated than what you can program, that&amp;rsquo;s why we use Machine Learning in the first place. See &lt;a href="https://www.youtube.com/watch?v=rd3R_G6_UfY">Full Self-Driving is HARD! Analyzing Elon Musk re: Tesla Autopilot on Lex Fridman&amp;rsquo;s Podcast - YouTube&lt;/a> where he talked about Tesla 11. Or &lt;a href="http://www.incompleteideas.net/IncIdeas/BitterLesson.html">&lt;em>The Bitter Lesson&lt;/em>&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><author>Chen Li</author><guid>https://ChenLi2049.github.io/posts/20230928-machine-learning-notes-a-hackers-guide-to-language-models/</guid><pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate></item></channel></rss>