<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS on Chen Li</title><link>https://ChenLi2049.github.io/tags/cs/</link><description>Recent content in CS on Chen Li</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 21 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ChenLi2049.github.io/tags/cs/atom.xml" rel="self" type="application/rss+xml"/><item><title>Markdown Style</title><link>https://ChenLi2049.github.io/posts/20230521-markdown-style/</link><pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230521-markdown-style/</guid><description>If you don&amp;rsquo;t know what it is, I recommend you should just play with it and don&amp;rsquo;t care about the style. Obsidian is the text editor that I&amp;rsquo;m using. I like workspaces and double link feature.
Markdown Guide is good as a quick introduction.
The thing about Markdown style is that every text editor has its own accent. I suggest using the universal ones, not the ones that a certain text editor created.</description></item><item><title>New Repository: PEP-8-ZH</title><link>https://ChenLi2049.github.io/posts/20230520-new-repository-pep-8-zh/</link><pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230520-new-repository-pep-8-zh/</guid><description>I created a repository called PEP-8-ZH. Basically, I translated PEP 8 with the help of ChatGPT, and with a little modification myself. The prompt that I use is:
将下文翻译为中文 And I did not translate the comments, because you should try to write comments in English.
If you want to learn about Python style, I recommend Google Style Guides (中文版见 Google 开源项目风格指南) as the guide. Which is more up to date. I&amp;rsquo;ll write about Python style soon.</description></item><item><title>List of a Folder</title><link>https://ChenLi2049.github.io/posts/20230423-list-of-a-folder/</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230423-list-of-a-folder/</guid><description>§1 path In Windows, to get the list of all the files in a folder:
Create a .txt file.
Open it with notepad. Copy and paste the following commands:
@echo off dir %1 /s/b &amp;gt; %~n1.txt Or, if you don&amp;rsquo;t want the list of what&amp;rsquo;s in the subdirectory:
@echo off dir %1 /b &amp;gt; %~n1.txt Rename it getList.bat (&amp;ldquo;getList&amp;rdquo; could be anything.)
Drag the target folder to this .bat file.</description></item><item><title>New Repository: Slidy</title><link>https://ChenLi2049.github.io/posts/20230423-new-repository-slidy/</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230423-new-repository-slidy/</guid><description>I just created a new repository for slide, which is called Slidy. Well, technically I didn&amp;rsquo;t create it, I just moved stuff around.
I use it for several reasons:
Microsoft PPT is just painful to use. And Marp is too much for me to handle. Even though I use Obsidian most often, I have to say that its slide function is not so convenient, I want to change to other windows when giving a presentation.</description></item><item><title>Conda 101</title><link>https://ChenLi2049.github.io/posts/20230327-conda-101/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230327-conda-101/</guid><description>This article is a quick guidance to use Anaconda &amp;amp; Miniconda on Windows. I wrote it so that I can check the command myself. Sorry about other platforms such as Linux, WSL on Windows or MacOS, but the §2 should be useful too.
§1 Anaconda Go the the official website Anaconda and download the default exe file. Open and install it. Get familiar with Jupyter Notebook. Feel free to check out some other articles and mess around, knowing that you can always delete the old environment and start from scratch, you&amp;rsquo;ll be fine.</description></item><item><title>Robin</title><link>https://ChenLi2049.github.io/posts/20230321-robin/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230321-robin/</guid><description>Besides writing code, having ChatGPT pretend to be Robin from How I Met Your Mother and engaging in a conversation with her is so funny. She is constantly making things up and I am trying my best to make the story work. And when it does, it&amp;rsquo;s amazing!
It&amp;rsquo;s even more fun to ask ChatGPT to be Jamie Lannister, since there is (part of) a whole novel and countless online discussions.</description></item><item><title>RSS: Why and How?</title><link>https://ChenLi2049.github.io/posts/20230304-rss-why-and-how/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230304-rss-why-and-how/</guid><description>RSS, personal website and the word &amp;ldquo;neat&amp;rdquo; shared a lot in common, one of which is that they died out at the beginning of this century but have become more useful ever since.
§1 Why? The whole goal of RSS is to keep it simple. I don&amp;rsquo;t want to check a lot of websites over and over again. Something should be read and then forgotten, unless it&amp;rsquo;s important, in which case I will mark it down.</description></item><item><title>寒武纪 MLU370-X4 安装在本地服务器的 ubuntu 上</title><link>https://ChenLi2049.github.io/posts/20230304-gpu-dock/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230304-gpu-dock/</guid><description>还未经测试!
显卡：寒武纪 MLU370-X4。
显卡坞的解决方式恐怕不行，因为如果重新更换设备需要重新从 ubuntu 开始装起，不如在另一台机器上构建一个本地服务器。除此之外的问题还有：笔记本自带的核显会打架吗？硬盘容量不够了。:(
视频介绍（除3.几乎完全是这个知乎专栏的内容）：
寒武纪 MLU370 加速卡简介及安装 寒武纪基础软件平台安装 MLU370 开发实战 文档（在熟悉视频介绍之后再查看）：
文档中心 MLU370-X4 智能加速卡产品手册 1.0.0 文档 我设想的本地服务器的构建流程：
安装 ubuntu，版本号见视频介绍：16.04或18.04? 按照视频介绍安装 torch.mlu 组件等等（和Dive into Deep Learning1这本书不同的地方在于，寒武纪在使用 pytorch 时导入 torch 和 torch.mlu 即可，不需安装 torchvision 即 pytorch 的 GPU 版本，此处 mlu 和 gpu 是两个相对的概念，指调用的底层架构不同） 安装 JupyterNotebook。 尝试寒武纪开发的工具 MagicMind和 YOLOv5。见 Cambricon(gitee.com)。 另一本很推荐的书是《智能计算系统》&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Hello World</title><link>https://ChenLi2049.github.io/posts/20230303-hello-world/</link><pubDate>Fri, 03 Mar 2023 00:00:00 +0000</pubDate><guid>https://ChenLi2049.github.io/posts/20230303-hello-world/</guid><description>Hello World!</description></item></channel></rss>